<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="OwnerMapper">
 
	<resultMap id="ownerSelectMap" type="owner">
		<result property="ownerId" column="owner_id" jdbcType="INTEGER"/>
		<result property="name" column="name" jdbcType="VARCHAR" />
		<result property="phone" column="phone" jdbcType="VARCHAR" />
		<result property="addr" column="addr" jdbcType="VARCHAR" />
		<result property="email" column="email" jdbcType="VARCHAR"  />
		<result property="resId" column="res_id" jdbcType="INTEGER"  />
	</resultMap>

	<insert id="addOwner" parameterType="owner" >
	 	INSERT
	 	INTO owner(owner_id, name, phone, addr, email, res_id) 
		VALUES	 ( owner_seq.NEXTVAL, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
		#{addr,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{resId} )
	</insert>
	
	<select id="findOwner" parameterType="owner" resultMap="ownerSelectMap">
	 	SELECT
		owner_id, name, phone, addr, email, res_id	
		FROM owner 
		WHERE name = #{name} 
	</select>
	 
	<select id="getOwner" parameterType="INTEGER" resultMap="ownerSelectMap">
		SELECT
		owner_id, name, phone, addr, email, res_id	
		FROM owner 
		WHERE owner_id = #{ownerId} 
	</select>
	
	<update id="updateOwner" parameterType="INTEGER">
		UPDATE owner
		<set>
			<if test="name != null">name = #{name},</if>
			<if test="phone != null">phone = #{phone},</if>
			<if test="addr != null">addr = #{addr},</if>
			<if test="email != null">email = #{email},</if>
			<if test="resId != null">res_id = #{resId}</if>
		</set>	
		WHERE owner_id = #{ownerId}
	</update>
	
	<delete	id="removeOwner" parameterType="INTEGER" >
		DELETE 
		FROM owner 
		WHERE owner_id = #{ownerId}
	</delete>
<!--  	 
	<sql id="select-beacon">
		SELECT
		beacon_id, uuid, major, minor, res_id 		
		FROM beacon 
	</sql>
	
	<sql id="orderby-beaconId-desc">
	 	ORDER BY beacon_id DESC
	</sql>
	
	<select id="getBeaconList" parameterType="search" 
	 											  resultMap="userSelectMap">
	
		<include refid="select-users"/>
	
		<where>
			<choose>
				<when test=" searchCondition=='userId' ">
					<if test="userId.size !=0">
					user_id IN
					<foreach 	item="value" 		collection="userId"  
										open="(" 			separator= ","			close=")">
						#{value}
					</foreach>
				</if>
				</when>
			
				<when test="searchCondition=='userName' ">
					<if test="userName[0] !=null"  >
					user_name IN
					<foreach 	item="value" 		collection="userName"  
										open="(" 			separator= ","			close=")">
						#{value}
					</foreach>
					</if>
				</when>
			</choose>
			
		</where>
		<include refid="orderby-userId-desc"/>
		
	 </select>
-->	 
</mapper>